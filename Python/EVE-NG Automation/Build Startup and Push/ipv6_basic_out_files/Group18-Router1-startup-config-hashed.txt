!
version 15.2
service timestamps debug datetime msec
service timestamps log datetime msec
!
hostname Group18-Router1
!
boot-start-marker
boot-end-marker
!
!
!
no aaa new-model
ip cef
!
!
!
!
!
!
no ipv6 cef
!         
!
multilink bundle-name authenticated
!
!
!
!
!
!
!
!
!
! 
!
!
!
!
!
!
!
!
!
!
!         
interface FastEthernet0/0
 no ip address
 shutdown
 duplex full
!
interface FastEthernet1/0
 no ip address
 shutdown
 duplex full
!
interface FastEthernet2/0
 no ip address
 shutdown
 duplex full
!
interface FastEthernet3/0
 no ip address
 shutdown
 duplex full
!
interface FastEthernet4/0
 no ip address
 shutdown 
 duplex full
!
interface FastEthernet5/0
 no ip address
 shutdown
 duplex full
!
interface FastEthernet6/0
 ipv6 address 2406:6400:99::18:1/64
 ip address 10.99.18.1 255.255.0.0
 description **MGMT - Do Not Delete**
 no shutdown
 duplex full
!
ip forward-protocol nd
!
!
no ip http server
no ip http secure-server
!
!
!
!
control-plane
!         
!
line con 0
 exec-timeout 0 0
 logging synchronous
!
line vty 0 4
 exec-timeout 0 0
 logging synchronous
 login local
 transport input all
!
!
!
!!! Common Configuration
!
service password-encryption
!
no ip domain lookup
ip domain name apnic.net
!
username apnic privilege 15 secret 5 $1$YL51$bIK5oWPxJmrD7nhvzYVQG0
!
ip ssh version 2
!
event manager applet write_mem authorization bypass
 event timer countdown time 80
 action 1.0 cli command "enable"
 action 1.1 cli command "write mem"
!
event manager applet crypto_key authorization bypass
 event timer cron cron-entry "@reboot" maxrun 60
 action 1.0 cli command "enable"
 action 1.1 cli command "config t"
 action 1.2 cli command "crypto key generate rsa modulus 1024"
 action 1.3 cli command "end"
 action 1.4 cli command "write mem" pattern "confirm|#"
 action 1.5 regexp "confirm" "$_cli_result"
 action 1.6 if $_regexp_result eq "1"
 action 1.7  cli command "y"
 action 1.8 end
 action 1.9 cli command "config t"
 action 2.0 cli command "no event manager applet crypto_key"
!
!
end